// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`initPGMock pg.queries should fail with lacking args 1`] = `
Object {
  "errorCode": "E_PG_LACKING_ARG",
  "errorParams": Array [
    "SELECT * FROM users WHERE id = $$userId",
    Object {},
    "userId",
  ],
}
`;

exports[`initPGMock pg.queries should work 1`] = `
Array [
  Array [
    Array [
      "SELECT * FROM users WHERE id = $$userId",
      "SELECT * FROM users WHERE id = $$userId",
    ],
    Object {
      "userId": 1,
    },
  ],
]
`;

exports[`initPGMock pg.query should fail with lacking args 1`] = `
Object {
  "errorCode": "E_PG_LACKING_ARG",
  "errorParams": Array [
    "SELECT * FROM users WHERE id = $$userId",
    Object {},
    "userId",
  ],
}
`;

exports[`initPGMock pg.query should fail with malformed query 1`] = `
Object {
  "errorCode": "E_INVALID_QUERY",
  "errorParams": Array [
    "SELECT * FROM",
    [Error: syntax error at end of input],
  ],
}
`;

exports[`initPGMock pg.query should work 1`] = `
Array [
  Array [
    "SELECT * FROM users WHERE id = $$userId",
    Object {
      "userId": 1,
    },
  ],
]
`;

exports[`initPGMock pg.transaction should fail with lacking args 1`] = `
Object {
  "errorCode": "E_PG_LACKING_ARG",
  "errorParams": Array [
    "SELECT * FROM users WHERE id = $$userId",
    Object {},
    "userId",
  ],
}
`;

exports[`initPGMock pg.transaction should work 1`] = `
Array [
  Array [
    Array [
      "SELECT * FROM users WHERE id = $$userId",
      "SELECT * FROM users WHERE id = $$userId",
    ],
    Object {
      "userId": 1,
    },
  ],
]
`;
